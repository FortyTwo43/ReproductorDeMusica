/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reproductor1;


import java.net.URL;
import java.util.*;
import javax.media.Player;
import javax.media.Manager;
import javax.swing.JOptionPane;
import javax.sound.sampled.*;
import java.io.File;


/**
 *
 * @author Robert Moreira
 */
public class VentanaPrincipal extends javax.swing.JFrame {
  
    LinkedList<URL> miLista=null;
    private Clip clip;
    private FloatControl volumeControl;
    private boolean isMuted = false;
    private float lastVolume = 0.8f;
    private boolean isPaused = false;
    private int indiceActual = 0; // Índice de la canción actual


    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        
        initComponents();
        configurarLista();
        isPaused = false;
        // Fijar tamaño y deshabilitar redimensionamiento
        setResizable(false);
        setSize(500, 400);
        setMinimumSize(new java.awt.Dimension(500, 400));
        setMaximumSize(new java.awt.Dimension(500, 400));
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reproductor de música");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        BTNcrear_lista = new javax.swing.JButton();
        BTNagregar_inicio_lista = new javax.swing.JButton();
        BTNagregar_final_lista = new javax.swing.JButton();
        BTNreproducir = new javax.swing.JButton();
        BTNpausePlay = new javax.swing.JButton();
        jButtonSiguiente = new javax.swing.JButton(); // Inicialización antes de uso
        jButtonAnterior = new javax.swing.JButton(); // Inicialización antes de uso
        sliderVolumen = new javax.swing.JSlider(0, 100, 80);
        sliderVolumen.setMajorTickSpacing(20);
        sliderVolumen.setMinorTickSpacing(5);
        sliderVolumen.setPaintTicks(true);
        sliderVolumen.setPaintLabels(true);
        sliderVolumen.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderVolumenStateChanged(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setTitle("Reproductor de música");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Reproductor de música");

        jScrollPane1.setViewportView(jList1);

        // Panel de botones de lista
        javax.swing.JPanel panelBotonesLista = new javax.swing.JPanel();
        panelBotonesLista.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 5));
        panelBotonesLista.add(BTNcrear_lista);
        panelBotonesLista.add(BTNagregar_inicio_lista);
        panelBotonesLista.add(BTNagregar_final_lista);

        BTNcrear_lista.setText("Crear lista");
        BTNcrear_lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNcrear_listaActionPerformed(evt);
            }
        });
        BTNagregar_inicio_lista.setText("Agregar al inicio");
        BTNagregar_inicio_lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNagregar_inicio_listaActionPerformed(evt);
            }
        });
        BTNagregar_final_lista.setText("Agregar al final");
        BTNagregar_final_lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNagregar_final_listaActionPerformed(evt);
            }
        });

        // Panel de control de reproducción
        javax.swing.JPanel panelControles = new javax.swing.JPanel();
        panelControles.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 5));
        BTNreproducir.setText("Reproducir");
        BTNreproducir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNreproducirActionPerformed(evt);
            }
        });
        BTNpausePlay.setText("Pausar/Reanudar");
        BTNpausePlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNpausePlayActionPerformed(evt);
            }
        });
        jButtonAnterior.setText("Anterior");
        jButtonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrocederCancionAnterior();
            }
        });
        jButtonSiguiente.setText("Siguiente");
        jButtonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avanzarSiguienteCancion();
            }
        });
        panelControles.add(BTNreproducir);
        panelControles.add(BTNpausePlay);
        panelControles.add(jButtonAnterior);
        panelControles.add(jButtonSiguiente);
        panelControles.add(sliderVolumen);

        // Layout principal
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
            .addComponent(panelBotonesLista, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
            .addComponent(panelControles, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(panelBotonesLista, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(panelControles, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 70, Short.MAX_VALUE))
        );
        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BTNagregar_inicio_listaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNagregar_inicio_listaActionPerformed
        // TODO add your handling code here:
        miLista=NodoLista.insercionCabecera(miLista);
        NodoLista.LlenarJlistConLista(jList1, miLista);
    }//GEN-LAST:event_BTNagregar_inicio_listaActionPerformed

    private void BTNcrear_listaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNcrear_listaActionPerformed
        // TODO add your handling code here:
        miLista=NodoLista.crearLista(miLista);
    }//GEN-LAST:event_BTNcrear_listaActionPerformed

    private void BTNreproducirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNreproducirActionPerformed
        // Reproducir el archivo seleccionado en la lista
        if (miLista != null && !miLista.isEmpty()) {
            int index = jList1.getSelectedIndex();
            if (index < 0) index = 0;
            String ruta = miLista.get(index).getPath();
            reproducirArchivo(ruta);
        } else {
            JOptionPane.showMessageDialog(this, "No hay archivos en la lista.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BTNreproducirActionPerformed

    private void BTNagregar_final_listaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNagregar_final_listaActionPerformed
        // TODO add your handling code here:
        miLista=NodoLista.insercionCima(miLista);
        NodoLista.LlenarJlistConLista(jList1, miLista);
    }//GEN-LAST:event_BTNagregar_final_listaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        NodoLista.MirarSiListaVacia(miLista);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        miLista=NodoLista.insercionPorPosicion(miLista);
        NodoLista.LlenarJlistConLista(jList1, miLista);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (miLista != null && !miLista.isEmpty()) {
            // Mostrar estadísticas de la lista
            String estadisticas = UtilidadesAudio.obtenerEstadisticasLista(miLista);
            JOptionPane.showMessageDialog(this, estadisticas, "Estadísticas de la Lista", 
                                         JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "La lista está vacía o no ha sido creada.", 
                                         "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    // Nueva función para reproducir audio usando Java Sound
    private void reproducirArchivo(String ruta) {
        try {
            if (clip != null && clip.isOpen()) {
                clip.stop();
                clip.close();
            }
            File audioFile = new File(ruta);
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioFile);
            clip = AudioSystem.getClip();
            clip.open(audioStream);
            // Control de volumen
            if (clip.isControlSupported(FloatControl.Type.MASTER_GAIN)) {
                volumeControl = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
                setVolume(sliderVolumen.getValue() / 100.0f);
            }
            clip.start();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se pudo reproducir el archivo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }
    }

    // Método para ajustar el volumen
    private void setVolume(float value) {
        if (volumeControl != null) {
            float min = volumeControl.getMinimum();
            float max = volumeControl.getMaximum();
            float gain = min + (max - min) * value;
            volumeControl.setValue(gain);
        }
    }

    // Modifica el slider para usar setVolume
    private void sliderVolumenStateChanged(javax.swing.event.ChangeEvent evt) {
        setVolume(sliderVolumen.getValue() / 100.0f);
    }

    /**
     * Configura la lista para mostrar información al hacer doble clic
     */
    private void configurarLista() {
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                    // Doble clic - mostrar información del archivo
                    int indice = jList1.locationToIndex(evt.getPoint());
                    if (indice >= 0 && miLista != null && indice < miLista.size()) {
                        String rutaArchivo = miLista.get(indice).toString();
                        UtilidadesAudio.mostrarInformacionArchivo(rutaArchivo);
                    }
                }
            }
        });
    }

    private void BTNpausePlayActionPerformed(java.awt.event.ActionEvent evt) {
        if (clip != null) { // Changed from reproductor to clip
            if (!isPaused) {
                clip.stop();
                BTNpausePlay.setText("Reanudar");
                isPaused = true;
            } else {
                clip.start();
                BTNpausePlay.setText("Pausar");
                isPaused = false;
            }
        }
    }

    private void avanzarSiguienteCancion() {
        if (miLista != null && !miLista.isEmpty()) {
            indiceActual = (indiceActual + 1) % miLista.size();
            // Detener la canción actual si está sonando
            if (clip != null) { // Changed from reproductor to clip
                clip.stop();
            }
            // Reproducir la siguiente canción
            try {
                String ruta = miLista.get(indiceActual).getPath();
                reproducirArchivo(ruta);
                jList1.setSelectedIndex(indiceActual);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "No se pudo reproducir la siguiente canción.", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println(e);
            }
        }
    }

    private void retrocederCancionAnterior() {
        if (miLista != null && !miLista.isEmpty()) {
            indiceActual = (indiceActual - 1 + miLista.size()) % miLista.size();
            // Detener la canción actual si está sonando
            if (clip != null) { // Changed from reproductor to clip
                clip.stop();
            }
            // Reproducir la canción anterior
            try {
                String ruta = miLista.get(indiceActual).getPath();
                reproducirArchivo(ruta);
                jList1.setSelectedIndex(indiceActual);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "No se pudo reproducir la canción anterior.", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println(e);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNagregar_final_lista;
    private javax.swing.JButton BTNagregar_inicio_lista;
    private javax.swing.JButton BTNcrear_lista;
    private javax.swing.JButton BTNreproducir;
    private javax.swing.JButton BTNpausePlay;
    private javax.swing.JButton jButtonSiguiente;
    private javax.swing.JButton jButtonAnterior;
    private javax.swing.JSlider sliderVolumen;
    private javax.swing.JList jList1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}